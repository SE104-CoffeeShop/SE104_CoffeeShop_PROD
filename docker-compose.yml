version: "3.8"
services:
  frontend:
    build:
      context: .
      dockerfile: react.dockerfile
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./src/SE104_CoffeeShop_FE:/app
      - ./.env:/app/.env
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - mynetwork

  backend:
    build:
      context: .
      dockerfile: laravel.dockerfile
    ports:
      - 8000:8000
    restart: unless-stopped
    volumes:
      - ./src/SE104_CoffeeShop_BE:/app
      - ./docker/logs:/app/storage/logs
      - ./.env:/app/.env
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL}
      - APP_NAME=${APP_NAME}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - mynetwork

  mysql:
    image: mysql:latest
    tty: true
    user: root
    command: ["--default-authentication-plugin=mysql_native_password"]
    restart: unless-stopped
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      - MYSQL_HOST=${DB_HOST}
      - MYSQL_PORT=${DB_PORT}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD
    networks:
      - mynetwork

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./.nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src/SE104_CoffeeShop_FE:/app/frontend
      - ./src/SE104_CoffeeShop_BE:/app/backend
      - ./docker/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - mynetwork

networks:
  mynetwork:
